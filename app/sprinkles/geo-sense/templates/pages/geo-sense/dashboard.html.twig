{% extends "pages/layouts/layout-dashboard.html.twig" %}

{% block page %}
    {% set page = page | merge({
        "title"       : "Dashboard",
        "description" : ""
    }) %}
    {{ parent() }}
{% endblock %}

{% block content %}
<div class="page-head">
    <div class="row text-center" style="display: none" id="pdf_title">
        <img src="{{site.uri.public}}/assets-raw/images/WiFi-Logo-Image-Blue.png" height="50px" width="50px" style="margin-top: 5px"/>
        <u><h1 class="bold">INTELLI-SENSE</h1></u>
    </div>

    <div class="page-title">
        <h1>{{page.title}}
            <small>{{page.description}}</small>
        </h1>
    </div>

    <button class="btn green-jungle pull-right" id="csv_button" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="Download report data in CSV format">Excel Export</button>
    <button class="btn orange pull-right" style="margin-right: 5px" aria-hidden="true" onclick="genPDF();" data-toggle="tooltip" data-placement="bottom" title="Print this page.">Print Report</button>
    <!-- <button class="btn btn-warning pull-right" id="tour_btn"style="margin-right: 5px" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="Start Tour">Start Page Tour</button> -->
    <span class="pull-right" style="margin-right: 20px"><h4><b>Venue Start Date - {{current_user.primaryVenue.venue_tracking.capture_start | date('d/m/Y', 'Europe/London')}}<b><h4></span>
</div>
<!-- END PAGE HEAD-->

<br>

<!-- BEGIN DASHBOARD STATS -->
<div class="row">
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_1" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-users"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_1"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Visitors, Last 7 days </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_2" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-clock-o"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_2"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Visitors, Previous 7 days </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_3" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-cloud-download"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_3"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Avg dwell time, Today </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_4" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-users"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_4"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                    </div>
                <div class="desc"> New / Repeat, Today </div>
            </div>
        </a>
    </div>
</div>
<div class="clearfix"></div>
<!-- END DASHBOARD STATS -->
<!-- START PORTLETS -->

<div class="row">
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_1_1" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Visitors per day, Last 31 days</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_1_1" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_1_2" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Current visitors</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                {# <div id="span_online_users" style="width: 100%; height: 200px; text-align: center; vertical-align: text-top; font-size: 1000%; color: #282828;"></div> #}
                <div id="chart_1_2" style="width: 100%; height: 200px; margin: 0 auto; text-align: center; font-size: 800%;"></div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_2_1" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Visitors per day</span>
                    <span class="caption-helper">last 7 days vs previous 7 days</span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_2_1" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_2_2" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Last 7 days Stats</span>
                    <span class="caption-helper">numbers of users per day for the last 7 days</span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_2_2" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_3_1" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Average visitors per hour</span>
                    <span class="caption-helper">last 7 days</span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_3_1" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_3_2" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Dwell time Analysis</span>
                    <span class="caption-helper">last 7 days</span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_3_2" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
</div>

<div class="row text-center" style="display: none" id="pdf_url">
    website address: <a>www.elephantwifi.co.uk</a>
</div>

<!-- END PORTLETS -->
{% endblock %}

{% block page_scripts %}
<script>
function genPDF() {
    var pdf_title = document.getElementById("pdf_title");
    if (pdf_title.style.display === "none") {
        pdf_title.style.display = "block";
    }

    var pdf_url = document.getElementById("pdf_url");
    if (pdf_url.style.display === "none") {
        pdf_url.style.display = "block";
    }

    var element = document.getElementsByClassName("page-content")[0];
    var opt = {
        margin:       1,
        filename:     'dashboard.pdf',
        image:        { type: 'jpeg', quality: 0.98 },
        html2canvas:  { scale: 1 },
        jsPDF:        { unit: 'pt', format: [1280, 720], orientation: 'l' }
    };

    html2pdf().set(opt).from(element).save();

    // Hide the element after 2 seconds allowing the screenshot to be taken while the element is shown
    window.setTimeout(hidePdfElements, 2000);
}

function hidePdfElements() {
    var pdf_title = document.getElementById("pdf_title");
    pdf_title.style.display = "none";

    var pdf_url = document.getElementById("pdf_url");
    pdf_url.style.display = "none";
}

/**
 * function to be executed when we want to print a page
 * (custom version for this page)
 */
var printUpdate = function () {
    /**
     * reflow all Highcharts instances
     */
    $('#chart_1_1').highcharts().reflow();
    $('#chart_2_1').highcharts().reflow();
    $('#chart_2_2').highcharts().reflow();
    $('#chart_3_1').highcharts().reflow();
    $('#chart_3_2').highcharts().reflow();
};

/**
 * file name and report title for CSV download
 */
var csv_filename = 'Dashboard-' + moment().format("DD_MMMM_YYYY_HHmm") + '.csv';
var csv_title    = 'GEO-Sense: Dashboard';
var venue_name   = '{{current_user.venue_name}}';

/**
 * initialise vars so that we can pull them into the CSV report later on after they're updated
 */
var visitors_last_7_days  = 0;
var visitors_prev_7_days  = 0;
var avg_dwell_time        = 0;
var visitors_today_new    = 0;
var visitors_today_repeat = 0;

/**
 * respond to click on the CSV download button
 */
$('#csv_button').on('click', function() {
    /**
     * initialise the arrays to append results to for download in CSV format
     */
    var csv_data = [];
    
    /**
     * get the data from the charts
     */
    csv_data.push({
        heading: 'Overall metrics',
        process: true,
        data: [['DateTime', 'Visitors Last 7 days', 'Visitors Prev 7 days', 'Avg dwell time Today (minutes)', 'Visitors today new', 'Visitors today repeat'],
               [moment().format("DD MMMM YYYY HH:mm"),visitors_last_7_days, visitors_prev_7_days, avg_dwell_time, visitors_today_new, visitors_today_repeat]]
               /**
                * NOTE: when process is true there must be at least two arrays (lines) of content: headers and data
                */
    });

    csv_data.push({
        heading: 'Visitors per day Last 31 days',
        process: false,
        data: $('#chart_1_1').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Current visitors',
        process: true,
        data: [['DateTime', 'unique visitors'], [moment().format("DD MMMM YYYY HH:mm"), $('#chart_1_2').html()]]
        /**
         * NOTE: when process is true there must be at least two arrays (lines) of content: headers and data
         */
    });

    csv_data.push({
        heading: 'Visitors per day Last 7 days Vs previous week',
        process: false,
        data: $('#chart_2_1').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Last 7 day stats',
        process: false,
        data: $('#chart_2_2').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Average visitors per hour',
        process: false,
        data: $('#chart_3_1').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Dwell time analysis',
        process: false,
        data: $('#chart_3_2').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    exportToCsv(csv_filename, csv_title, venue_name, csv_data);
});

$(document).ready(function() {
    /**
     * calculate weekends for plotbands
     */
    var seriesEnd     = moment().startOf('day');
    var seriesStart   = seriesEnd - (300000*24*365);
    var weekends      = weekendAreas(seriesStart, seriesEnd);
    var weekendsDaily = weekendAreasDaily4Columns(seriesStart, seriesEnd);

    /***************************************************************
     * start preparations for the individual charts from here
     ***************************************************************/

    /***************************************************************
     * start of visitor stats chart
     * container: chart_1_1
     ***************************************************************/
    var visitorChartOptions = {
        chart: {
            renderTo:        'chart_1_1',
            backgroundColor: '#FFFFFF',
            type:            'area',
            zoomType:        'x'
        },
        xAxis: {
            type:      'datetime',
            plotBands: weekends,
            labels: {
                format: '{value: %e %b}'
            }
        },
        tooltip: {
            shared: true,
            formatter: function () {
                var tooltipcontent = '<b>' + moment(this.x).format("dddd, D MMMM YYYY") + '</b>';

                /**
                 * we have to loop here as we don't yet know how many series we will have
                 */
                $.each(this.points, function () {
                    tooltipcontent += '<br/>' + this.series.name + ': ' + this.y.toLocaleString();
                });

                return tooltipcontent;
            }
        },
        plotOptions: {
            area: {
                pointPlacement: 'between',
                marker: {
                    enabled: false,
                    symbol:  'circle',
                    radius:  2,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            }
        },
        legend: {
            enabled: true
        }
    };

    /**
     * initialize the visitors chart
     */
    var visitorsChart = new Highcharts.Chart(visitorChartOptions);
    visitorsChart.showLoading();

    /**
     * calculate start and end for 31 days period
     */
    var visitorsEnd   = moment().startOf('day');
    var visitorsStart = moment(visitorsEnd).subtract(31, 'days');

    /**
     * get the visitors data with ajax
     */
    $.ajax({
        /**
         * the following url gives us daily counts over the last 31 days
         */
        url:      '{{site.uri.public}}/geo-sense/api/stats/venue/unique_visitors/daily/' + visitorsStart + '/' + visitorsEnd,
        type:     'GET',
        dataType: 'json',
        success:  onVisitorsDataReceived
    });

    function onVisitorsDataReceived(data) {
        /**
         * Load all the data for the charts and sort the json results
         */
        data.sort(function(a, b){
            var x=a[0];
            var y=b[0];
            return x-y;
        });

        /**
         * do something with the data
         */
        var uniqueMetrics =[];
        uniqueMetrics     = data;
        var seriesoptions = [
            {
                type:     'area',
                lineWidth: 2,
                states: {
                    hover: {
                        enabled:   true,
                        lineWidth: 2
                    }
                },
                color:      '#e25826',
                name:       'unique visitors',
                pointInterval: 24 * 3600 * 1000
            }
        ];

        visitorChartOptions.series = seriesoptions;
        var visitorsChart          = new Highcharts.Chart(visitorChartOptions);
        visitorsChart.series[0].setData(noGapsDataArray(uniqueMetrics, 86400));
    }
    /***************************************************************
     * end of visitors charts
     ***************************************************************/

    /***************************************************************
     * start of weekdays piechart
     ***************************************************************/
    var totalText = null;
    var weekdaysPieChartOptions = {
        chart: {
            renderTo:        'chart_2_2',
            type:            'pie',
            backgroundColor: '#FFFFFF',
            plotBorderWidth: null,
            plotShadow:      false,
            spacingTop:      5,
            spacingBottom:   5,
            spacingLeft:     5,
            spacingRight:    5
        },
        legend: {
            align:         'right',
            verticalAlign: 'top',
            layout:        'vertical'
        },
        tooltip: {
            formatter: function () {
                var tooltipcontent = '<b>' + this.key + '</b><br>' + (Math.round(this.percentage*10))/10 + '% (' + this.y.toLocaleString() + ' of ' + this.total.toLocaleString() + ')';
                return tooltipcontent;
            }
        },
        plotOptions: {
            pie: {
                borderWidth:      1,
                allowPointSelect: true,
                showInLegend:     true,
                dataLabels: {
                    enabled: false,
                },
                point: {
                    events: {
                        legendItemClick: function () {
                            return false;
                        }
                    }
                },
                showInLegend: true
            }
        },
        series: [{
            name:         'Unique visitors',
            colorByPoint: true,
            data:         []
        }]
    };

    /**
     * initialize the weekdays pie chart
     */
    var weekdaysPieChart = new Highcharts.Chart(weekdaysPieChartOptions);
    weekdaysPieChart.showLoading();

    /***************************************************************
     * end of weekdays piechart
     ***************************************************************/

    /***************************************************************
     * start of weekdays compared chart
     * container: chart_2_1
     * url: /api/unique_visitors/weekdays_compared
     ***************************************************************/
    var weekdaysChartOptions = {
        chart: {
            renderTo:        'chart_2_1',
            backgroundColor: '#FFFFFF',
            type:            'column'
        },
        xAxis: {
            type: 'category'
        },
        plotOptions: {
            area: {
                marker: {
                    enabled: false,
                    symbol:  'circle',
                    radius:  2,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            }
        },
        legend: {
            enabled: true
        }
    };

    /**
     * initialize the weekdays compared chart
     * weekRangeEnd and weekRangeStart mark start and end of the most recent week
     * the previous week before this week, will be determined automatically
     */
    var weekdaysChart = new Highcharts.Chart(weekdaysChartOptions);
    weekdaysChart.showLoading();

    /**
     * define start and end
     */
    var startToday     = moment().startOf('day');
    var weekRangeEnd   = startToday;
    var weekRangeStart = moment(weekRangeEnd).subtract(7, 'days');

    /**
     * get the weekdays data with ajax
     */
    $.ajax({
        url:      '{{site.uri.public}}/geo-sense/api/stats/venue/unique_visitors/weekdays_compared/' + weekRangeStart + '/' + weekRangeEnd,
        type:     'GET',
        dataType: 'json',
        success:  onWeekdaysDataReceived
    });

    function onWeekdaysDataReceived(data) {
        /**
         * do something with the data, first prepare
         */
        var thisWeekdays =[];
        thisWeekdays     = data['this_week'];
        var prevWeekdays =[];
        prevWeekdays     = data['prev_week'];

        weekdaysChartOptions.plotOptions = {
            series: {
                dataLabels : {
                    useHTML: true,
                    enabled: true,
                    align: 'center',
                    verticalAlign: 'top',
                    formatter: function () {
                        var day_epoch = this.point.day_epoch;
                        var event = '';
                        var event_categories = [];
                        $.each(data.event, function(key, value) {
                            if (day_epoch >= value['start_date'] && day_epoch <= value['end_date']) {
                                if (event_categories.length == 0) {
                                    event = `<span padding-top: 20px;><i style="background-color:` + value['color'] + `" class="circle-icon fa fa-calendar"></i></span>`;
                                    event_categories.push(value['category_id']); 
                                }

                                if ($.inArray(value['category_id'], event_categories) == -1) {
                                    event += `<br><span><i style="background-color:` + value['color'] + `" class="circle-icon fa fa-calendar fa-sm"></i></span>`;
                                    event_categories.push(value['category_id']); 
                                }
                            }
                        });
                        return event;
                    }
                }
            }
        }

        weekdaysChartOptions.tooltip = {
            shared: true,
            useHTML: true,
            borderWidth: 0,
            backgroundColor: "rgba(255,255,255,0)",
            shadow: false,
            formatter: function () {
                var tooltipcontent = '<b>' + this.points[0].key + '</b>';

                if (typeof this.points[1] !== 'undefined') {
                    var day_epoch  = this.points[1].point.day_epoch;
                    $.each(data.event, function(key, value) {
                        if (day_epoch >= value['start_date'] && day_epoch <= value['end_date']) {
                            tooltipcontent += '<p><b>Event: </b>' + value['name'] + ' (' + moment(day_epoch).format('DD/MM/YYYY') + ')</p>';
                        }
                    });
                }

                if (typeof this.points[0] !== 'undefined') {
                    var day_epoch  = this.points[0].point.day_epoch;
                    $.each(data.event, function(key, value) {
                        if (day_epoch >= value['start_date'] && day_epoch <= value['end_date']) {
                            tooltipcontent += '<p><b>Event: </b>' + value['name'] + ' (' + moment(day_epoch).format('DD/MM/YYYY') + ')</p>';
                        }
                    });
                }

                tooltipcontent += '<table style="width:100%">';

                /**
                 * we loop through the value for the two series
                 */
                $.each(this.points, function () {
                    if (typeof this !== 'undefined') {
                        symbol = '■';
                        tooltipcontent += '<tr><td><span style="color:' + this.point.color + '">' + symbol + '</span> ' + this.series.name + ':</td><td style="text-align: right;">' + this.y.toLocaleString() + '</td></tr>';
                    }
                });

                if ((typeof this.points[1] !== 'undefined') && (typeof this.points[0] !== 'undefined') && (typeof this.points[1].y !== 'undefined') && (typeof this.points[0].y !== 'undefined')) {
                    /**
                     * only when we have two series for this category we display the change between the two values, then close the table and return the tooltip
                     */
                    var change = (this.points[1].y - this.points[0].y)/this.points[0].y;
                    if (change >= 0 ) {
                        tooltipcontent += '<tr><td><b>Change:</b></td><td style="text-align: right; color: #66B366"><b>+' + (Math.round(change*1000)/10).toLocaleString() + '%</b></td></tr>';
                    } else {
                        tooltipcontent += '<tr><td><b>Change:</b></td><td style="text-align: right; color: #DD686E"><b>' + (Math.round(change*1000)/10).toLocaleString() + '%</b></td></tr>';
                    }
                }

                tooltipcontent += '</table>';
                return tooltipcontent;
            }
        }

        /**
         * then sort the days of the week up to yesterday
         */
        var daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        var today      = new Date().getDay();
        for (var i=0;i<today;i++) daysOfWeek.push(daysOfWeek.shift());

        function daysOfWeekSorter(x,y) {
            return daysOfWeek.indexOf(x[0])-daysOfWeek.indexOf(y[0]);
        }

        prevWeekdays.sort(daysOfWeekSorter);
        thisWeekdays.sort(daysOfWeekSorter);

        /**
         * set the options for the series
         */
        var seriesoptions = [
            {
                color: '#001E4C', // dark blue
                name:  'previous 7 days'
            },
            {
                color: '#e25826', // orange
                name:  'last 7 days'
            }
        ];

        weekdaysChartOptions.series = seriesoptions;
        var weekdaysChart           = new Highcharts.Chart(weekdaysChartOptions);

        /**
         * only populate the chart series if we have results
         */
        if (thisWeekdays.length > 0) {
            weekdaysChart.series[1].setData(thisWeekdays);
        }

        if (prevWeekdays.length > 0) {
            weekdaysChart.series[0].setData(prevWeekdays);
        }

        /**
         * here we also feed the pie chart showing breakdown per week day over tha last 7 days
         */
        var weekDaysForPie =[];
        for (var ln = 0; ln < thisWeekdays.length; ln++) {
            var item = {
                'name': thisWeekdays[ln]['name'],
                'y':    thisWeekdays[ln]['y']
            };
            weekDaysForPie.push(item);
        }

        var pieChart = $('#chart_2_2').highcharts();
        //pieChart.series[0].setData(weekDaysForPie);
        pieChart.series[0].remove();
        pieChart.hideLoading();
        pieChart.addSeries({
            name:         'Unique visitors',
            colorByPoint: true,
            data:         weekDaysForPie
        });
    }

    /***************************************************************
     * end of weekdays compared chart
     ***************************************************************/

    /***************************************************************
     * start of dwell time analysis chart
     * container: chart_3_2
     * url: /api/stats/daily_average_dwelltime/:start/:end/
     ***************************************************************/
    var durationsChartOptions = dwell_time_analysis_options;
    dwell_time_analysis_options.chart.renderTo = 'chart_3_2';
    dwell_time_analysis_options.xAxis.plotBands = weekendsDaily;
    dwell_time_analysis_options.xAxis.labels = {
        format: '{value:%A}'
    };

    /**
     * initialize the durations chart
     */
    var durationsChart = new Highcharts.Chart(durationsChartOptions);
    durationsChart.showLoading();

    /**
     * define start and end
     */
    var durationsEnd   = moment().startOf('day');
    var durationsStart = moment(durationsEnd).subtract(7, 'days');

    /**
     * get the durations data with ajax
     */
    $.ajax({
        url:      '{{site.uri.public}}/geo-sense/api/stats/venue/visitors_durations/' + durationsStart + '/' + durationsEnd,
        type:     'GET',
        dataType: 'json',
        success:   onDurationsDataReceived
    });

    function onDurationsDataReceived(data) {
        /**
         * define the series received
         */
        var seriesoptions = [
            {
                type: 'line',
                name: 'average dwelltime',
                yAxis: 1,
                color: '#C6D4FC',
                dashStyle: 'LongDash'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_5_label}}',
                color: '#949898'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_4_label}}',
                color: '#5A5A5A'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_3_label}}',
                color: '#6EB553'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_2_label}}',
                color: '#4E5977'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_1_label}}',
                color: '#E9825C'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_skipped_label}}',
                visible: false,
                color: '#DD686E' // otherwise this becomes purple
            }
        ];

        /**
         * if our date range is longer than 2 days, we disable the markers for clean lines
         * if shorter we switch to a stacked column chart
         */
        if (data['dt_level_1'].length > 2) {
            durationsChartOptions.plotOptions.series.marker.enabled = false;
        } else {
            durationsChartOptions.plotOptions.series.marker.enabled = true;

            $.each(seriesoptions, function () {
                if (this.type == 'area') {
                    this.type = 'column';
                }
            });
        }

        durationsChartOptions.series = seriesoptions;
        durationsChart = new Highcharts.Chart(durationsChartOptions);
        durationsChart.series[6].setData(noGapsDataArray(data['dt_skipped'], 86400));
        durationsChart.series[5].setData(noGapsDataArray(data['dt_level_1'], 86400));
        durationsChart.series[4].setData(noGapsDataArray(data['dt_level_2'], 86400));
        durationsChart.series[3].setData(noGapsDataArray(data['dt_level_3'], 86400));
        durationsChart.series[2].setData(noGapsDataArray(data['dt_level_4'], 86400));
        durationsChart.series[1].setData(noGapsDataArray(data['dt_level_5'], 86400));
        durationsChart.series[0].setData(noGapsDataArray(data['dt_average'], 86400));
    }

    /***************************************************************
     * end of durations chart
     ***************************************************************/

    /***************************************************************
     * start of timeOfDay average chart
     * container: chart_3_1
     * url: api/unique_visitors/hours/$start/$end
     ***************************************************************/
    var timeOfDayChartOptions = {
        chart: {
            renderTo:        'chart_3_1',
            backgroundColor: '#FFFFFF',
            type:            'area'
        },
        xAxis: {
            type: 'category'
        },
        tooltip: {
            shared:    true,
            formatter: function () {
                var tooltipcontent = '<b>Between ' + this.x + ':00 and ' + (this.x+1) + ':00</b>';
                // we have to loop here as we don't yet know how many series we will have
                $.each(this.points, function () {
                    tooltipcontent += '<br/>' + this.series.name + ': ' +
                        this.y.toLocaleString();
                });

                return tooltipcontent;
            }
        },
        plotOptions: {
            area: {
                marker: {
                    enabled: false,
                    symbol:  'circle',
                    radius:  2,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            }
        },
        legend: {
            enabled: true
        }
    };

    /**
     * initialize the timeOfDay average chart
     */
    var timeOfDayChart = new Highcharts.Chart(timeOfDayChartOptions);
    timeOfDayChart.showLoading();

    /**
     * calculate start and end here
     */
    var weekRangeEnd   = moment().startOf('day');
    var weekRangeStart = moment(weekRangeEnd).subtract(7, 'days');

    /**
     * get the timeOfDay average data with ajax
     * url: "api/unique_visitors/hours/$start/$end"
     */
    $.ajax({
        url:      '{{site.uri.public}}/geo-sense/api/stats/venue/unique_visitors/hours/' + weekRangeStart + '/' + weekRangeEnd,
        type:     'GET',
        dataType: 'json',
        success:  ontimeOfDayDataReceived
    });

    function ontimeOfDayDataReceived(data) {
        /**
         * do something with the data
         */
        var seriesoptions = [
            {
                type:  'area',
                color: '#e25826',
                name:  'average visitors'
            }
        ];

        timeOfDayChartOptions.series = seriesoptions;
        timeOfDayChart = new Highcharts.Chart(timeOfDayChartOptions);
        timeOfDayChart.series[0].setData(data);
    }

    /***************************************************************
     * end of timeOfDay average chart
     ***************************************************************/

    /***************************************************************
     * top row donut charts from here
     ***************************************************************/

    /**
     * here we get all the dashboard metrics with ajax,
     * starting off with some timing definitions
     */
    var now                     = moment();
    var startToday              = moment().startOf('day');
    var weekRangeEnd            = startToday;
    var weekRangeStart          = moment(weekRangeEnd).subtract(7, 'days');
    var previous7daysRangeEnd   = weekRangeStart;
    var previous7daysRangeStart = moment(previous7daysRangeEnd).subtract(7, 'days');

    /**
     * ajax function to get current footfall
     * NOTE: this data is also refreshed every so many seconds, so any changes made here also need to applied
     * to the timer function at the end of the script section
     */
    $.ajax({
        url:      '{{site.uri.public}}/geo-sense/api/footfall_count/' + ((now)-{{current_user.primaryVenue.current_visitors_bucket * 1000}}) + '/' + now,
        type:     'GET',
        dataType: 'json',
        success:  onCurrentFootfallDataReceived
    });

    /**
     * then push the received data to the page
     */
    function onCurrentFootfallDataReceived(data) {
        $("#chart_1_2_loading_spinner").hide();
        $('#chart_1_2').html(data);
    }

    /**
     * ajax function to get new vs. repeat visitors today
     */
    $.ajax({
        url:      '{{site.uri.public}}/geo-sense/api/new_vs_repeat/today',
        type:     'GET',
        dataType: 'json',
        success:  onTodayNewVsRepeatDataReceived
    });

    /**
     * then push the received data to the page
     */
    function onTodayNewVsRepeatDataReceived(data) {
        $('#donut_4').html(data['new'].toLocaleString() + ' / ' + data['repeat'].toLocaleString());
    }

    /**
     * 1: ajax function to get visitors of last 7 days
     * 2: ajax function to get footfall of previous 7 day period
     * call these two ajax functions using promise, in order to execute a function after both results have been received
     * NOTE: if footfall has decreased we display the current footfall in red with a down arrow icon
     */
    $.when( 
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/stats/venue/footfall_count/' + weekRangeStart + '/' + weekRangeEnd,
            type:     'GET',
            dataType: 'json'
        }),
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/stats/venue/footfall_count/' + previous7daysRangeStart + '/' + previous7daysRangeEnd,
            type:     'GET',
            dataType: 'json'
        })
    ).done(function( a1, a2 ) {
        /**
         * a1 and a2 are arguments resolved for the first and second ajax requests, respectively
         */
        $('#donut_2').html((Number(a2[0])).toLocaleString());
        visitors_prev_7_days = Number(a2[0]);

        if ((a1[0] - a2[0]) < 0) {
            $('#donut_1').html((Number(a1[0])).toLocaleString() + ' <i class="fa fa-arrow-down"></i>');
            visitors_last_7_days = Number(a1[0]);
        } else {
            $('#donut_1').html((Number(a1[0])).toLocaleString() + ' <i class="fa fa-arrow-up"></i>');
            visitors_last_7_days = Number(a1[0]);
        }
    });

    /**
     * ajax function to get today's average dwell time
     */
    $.ajax({
        url:      '{{site.uri.public}}/geo-sense/api/stats/daily_average_dwelltime/' + startToday + '/' + now,
        type:     'GET',
        dataType: 'json',
        success:  onTodayAvgDwelltimeDataReceived
    });

    /**
     * then push the received data to the page
     */
    function onTodayAvgDwelltimeDataReceived(data) 
    {
        if (typeof(data.dwell_time_averages[0]) != 'undefined') {
            avg_dwell_time = Math.round(data.dwell_time_averages[0].y);
            $('#donut_3').html(avg_dwell_time + ' <span style="font-size: 60%;">minutes</span>');
        } else {
            $('#donut_3').html('<span style="font-size: 60%;">unknown</span>');
        }
    }

    /***************************************************************
     * end of top row donut charts
     ***************************************************************/
});
</script>
{% endblock %}
{% extends "pages/layouts/layout-dashboard.html.twig" %}

{% block page %}
    {% set page = page | merge({
        "title"       : "Multi Venue Visitor Report",
        "description" : "Multi Venue Report page"
    }) %}
    {{ parent() }}
{% endblock %}

{% block content %}
<div class="page-head">
    <div class="page-title">
        <h1>{{page.title}}
            <small>{{page.description}}</small>
        </h1>
    </div>

    <div class="page-toolbar">
        <div id="page_daterange" data-display-range="1" class="pull-right tooltips btn btn-fit-height blue-soft" data-placement="top" data-original-title="Select a time frame">
            <span class="visible-sm-inline visible-md-inline visible-lg-inline" id="page_daterange_selected"></span><span class="visible-xs-inline" id="page_daterange_selected_small"></span>&nbsp;
            <i class="icon-calendar"></i>&nbsp;
            <span class="thin uppercase hidden-xs"></span>&nbsp;
            <i class="fa fa-angle-down"></i>
        </div>
    </div>

    <button class="btn green-jungle pull-right" style="margin-right: 10px" id="csv_button" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="Download report data in CSV format">Excel Export</button>
    <button class="btn orange pull-right" style="margin-right: 5px" aria-hidden="true" onclick="genPDF();" data-toggle="tooltip" data-placement="bottom" title="Print this page.">Print Report</button>
    <!-- <button class="btn btn-warning pull-right" id="tour_btn"style="margin-right: 5px" aria-hidden="true" data-toggle="tooltip" data-placement="bottom" title="Start Tour">Start Page Tour</button> -->
</div>

<br>

<div class="row">
    <div class="col-md-12">
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="headingOne">
                    <h4 class="panel-title">
                    <a role="button" class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                        <i class="up-down fa fa-chevron-down fa-fw pull-right"></i>
                        Venues included
                    </a>
                    </h4>
                </div>
                <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        <div class="col-xs-12" align="center" style="line-height: 22px;">
                            {% for venue in current_user.getVenues() %}
                            <span class="badge badge-primary">{{venue.name}}</span>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- BEGIN MULTI VENUE REPORT STATS -->
<div class="row">
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_1" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-users"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_5"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Average visits, per year </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_2" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-clock-o"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_6"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Average visits, per month </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_3" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-cloud-download"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_7"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Average visits, per week </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_4" class="dashboard-stat dashboard-stat-v2 blue-soft" href="#">
            <div class="visual">
                <i class="fa fa-users"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_8"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                    </div>
                <div class="desc"> Average visits, per day </div>
            </div>
        </a>
    </div>
</div>
<div class="row">
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_5" class="dashboard-stat dashboard-stat-v2 yellow-gold" href="#">
            <div class="visual">
                <i class="fa fa-users"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_1"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Total visits this period </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_6" class="dashboard-stat dashboard-stat-v2 yellow-gold" href="#">
            <div class="visual">
                <i class="fa fa-clock-o"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_2"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Busiest time of day </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_7" class="dashboard-stat dashboard-stat-v2 yellow-gold" href="#">
            <div class="visual">
                <i class="fa fa-cloud-download"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_3"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                </div>
                <div class="desc"> Average dwell time </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
        <a id="donut_container_8" class="dashboard-stat dashboard-stat-v2 yellow-gold" href="#">
            <div class="visual">
                <i class="fa fa-users"></i>
            </div>
            <div class="details">
                <div class="number bold">
                    <span id="donut_4"><i class="fa fa-circle-o-notch fa-spin" style="font-size: 70%;"></i></span>
                    </div>
                <div class="desc"> Average visits per day </div>
            </div>
        </a>
    </div>
</div>
<div class="clearfix"></div>
<!-- END VISITOR REPORT STATS -->
<!-- START PORTLETS -->

<div class="row">
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_1_1" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Total Visitors</span>
                    <span class="caption-helper">all time</span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div style="width: 100%; height: 200px;">
                    <div id="chart_1_1_loading_spinner" class="loading_spinner"><i class="fa fa-spinner fa-2x fa-spin"></i></div>
                    <div id="chart_1_1" class="hidden-md hidden-xs" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%); height: 40%; width: 100%; font-size: 700%; text-align: center;"></div>
                    <div id="chart_1_1_md" class="visible-md-inline-block visible-xs-inline-block"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_1_2" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Total Visitors - New Vs Repeat</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_1_2" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_2_1" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Busiest Venues</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_2_1" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_2_2" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Dwell time Analysis</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_2_2" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_3_1" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold"> Number of Visitors - New Vs Repeat</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_3_1" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-xs-12 col-sm-12">
        <div id="chart_container_3_2" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption ">
                    <span class="caption-subject font-blue-sharp bold">Time of Day - Average</span>
                    <span class="caption-helper"></span>
                </div>
                <div class="tools">
                    <i class="fa fa-question-circle info-icon"></i>
                    <a href="" class="collapse"> </a>
                    <a href="" class="fullscreen"> </a>
                </div>
            </div>
            <div class="portlet-body">
                <div id="chart_3_2" style="width: 100%; height: 200px; margin: 0 auto"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">

<!-- END PORTLETS -->
{# END PAGE CONTENT #}
{% endblock %}

{% block page_scripts %}
<script type="text/javascript" class="init">
function genPDF() {
    var element = document.getElementsByClassName("page-content")[0];
    var opt = {
        margin:       1,
        filename:     'multi_venue_report.pdf',
        image:        { type: 'jpeg', quality: 0.98 },
        html2canvas:  { scale: 1 },
        jsPDF:        { unit: 'pt', format: [1280, 720], orientation: 'l' }
    };

    html2pdf().set(opt).from(element).save();
}
    
/**
 * function to be executed when we want to print a page
 * (custom version for this page)
 */
var printUpdate = function () {
    /**
     * reflow all Highcharts instances
     */
    $('#chart_1_2').highcharts().reflow();
    $('#chart_2_1').highcharts().reflow();
    $('#chart_1_1').highcharts().reflow();
    $('#chart_3_2').highcharts().reflow();
    $('#chart_2_2').highcharts().reflow();
};

/**
 * initialise the arrays to append results to for download in CSV format
 */
var csv_data = [];

/**
 * global var to prevent loops in charts syncing when zooming in/out
 * more examples here: http://jsfiddle.net/vgsp1duo/1/
 */
var rezoom_calling = 0;

/**
 * file name and report title for CSV download
 */
var csv_filename = 'Multi_Venue_Report-' + moment().format("DD_MMMM_YYYY_HHmm") + '.csv';
var csv_title    = '';
var venue_name   = 'All Venues';

/**
 * respond to click on the CSV download button
 */
$('#csv_button').on('click', function() {
    /**
     * update export title to reflect selected range
     */
    csv_title = 'GEO-Sense: Multi Venue Report - selected range: ' + $('#page_daterange_selected_large').text().replace(/,/g , '') + ')';

    /**
     * get the data from the charts
     */
    csv_data.push({
        heading: 'Overall Metrics',
        process: true,
        data: [['DateTime', 'Average visitors per year', 'Average visitors per month', 'Average visitors per week', 'Average visitors per day', 'Total visitors this period', 'Busiest time of day', 'Average dwell time', 'Average visitors per day'],
               [
                    moment().format("DD MMMM YYYY HH:mm"),
                    $('#donut_5').text().replace(/,/g , ''),
                    $('#donut_6').text().replace(/,/g , ''),
                    $('#donut_7').text().replace(/,/g , ''),
                    $('#donut_8').text().replace(/,/g , ''),
                    $('#donut_1').text().replace(/,/g , ''),
                    $('#donut_2').text().replace(/,/g , ''),
                    $('#donut_3').text().replace(/,/g , ''),
                    $('#donut_4').text().replace(/,/g , ''),
               ]]
               // when process is true there must be at least two arrays (lines) of content: headers and data
    });

    csv_data.push({
        heading: 'Busiest Venues',
        process: false,
        data: $('#chart_2_1').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Total Visitors - New Vs Repeat',
        process: false,
        data: $('#chart_1_2').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Number of Visitors - New Vs Repeat',
        process: false,
        data: $('#chart_3_1').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Dwell time analysis',
        process: false,
        data: $('#chart_2_2').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    csv_data.push({
        heading: 'Total visitors - All Venues',
        process: true,
        data: [['DateTime', 'total visitors'], [moment().format("DD MMMM YYYY HH:mm"), $('#chart_1_1').html()]]
        // when process is true there must be at least two arrays (lines) of content: headers and data
    });

    csv_data.push({
        heading: 'Time of Day - Average',
        process: false,
        data: $('#chart_3_2').highcharts().getCSV() // when process is false we just push the output from Highcharts
    });

    exportToCsv(csv_filename, csv_title, venue_name, csv_data);
});

$(document).ready(function() {
    /**
     * Set the global timezone for this session for use in moment.js
     */
    moment.tz.setDefault('{{current_user.primaryVenue.time_zone}}');
    moment.updateLocale('en', {
        week : {
            dow : 1,
        }
    });

    /**
     * toggle the up/down chevron icons on the "venues included" panel header
     */
    function toggleIcon(e) {
        $(e.target)
            .prev('.panel-heading')
            .find('.up-down')
            .toggleClass('fa-chevron-down fa-chevron-up');
    }
    $('.panel-group').on('hidden.bs.collapse', toggleIcon);
    $('.panel-group').on('shown.bs.collapse', toggleIcon);

    /**
     * empty weekends array for plotbands
     */
    var weekends = [];

    /***************************************************************
     * start preparations for the individual charts from here
     ***************************************************************/

    /***************************************************************
     * start of dwell time analysis chart
     * container: chart_2_2
     * plotbands: weekends
     * sync with: section_1_chart_2_1
     ***************************************************************/
    var chart_2_2_Options = dwell_time_analysis_options;
    chart_2_2_Options.chart.renderTo = 'chart_2_2';
    chart_2_2_Options.xAxis.plotBands = weekends;
    chart_2_2_Options.chart.zoomType = 'x';
    chart_2_2_Options.xAxis.events = {
        /**
         * sync charts when zoom is triggered
         */
        afterSetExtremes: function (event) {
            var xMin = event.min;
            var xMax = event.max;
            var chart_3_1 = $('#chart_3_1').highcharts();
            var ex = chart_3_1.xAxis[0].getExtremes();
            if (ex.min != xMin || ex.max != xMax) chart_3_1.xAxis[0].setExtremes(xMin, xMax, true, false);
        }
    };

    /**
     * initialize the chart
     */
    var chart_2_2 = new Highcharts.Chart(chart_2_2_Options);
    chart_2_2.showLoading();

    /**
     * callback to be called from the bundled ajax calls
     */
    function onChart_2_2_DataReceived(data) {
        /**
         * define the series received
         */
        var seriesoptions = [
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_skipped_label}}',
                visible: false,
                color: '#DD686E' // otherwise this becomes purple
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_1_label}}'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_2_label}}'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_3_label}}'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_4_label}}'
            },
            {
                type: 'area',
                name: '{{current_user.primaryVenue.dt_level_5_label}}'
            },
            {
                type: 'line',
                name: 'average dwelltime',
                yAxis: 1,
                color: '#C6D4FC',
                dashStyle: 'LongDash'
            }
        ];

        /**
         * if our date range is longer than 2 days, we disable the markers for clean lines
         * if shorter we switch to a stacked column chart
         */
        if (data['dt_level_1'].length > 2) {
            chart_2_2_Options.plotOptions.series.marker.enabled = false;
        } else {
            chart_2_2_Options.plotOptions.series.marker.enabled = true;

            $.each(seriesoptions, function () {
                if (this.type == 'area') {
                    this.type = 'column';
                }
            });
        }

        chart_2_2_Options.series = seriesoptions;
        chart_2_2 = new Highcharts.Chart(chart_2_2_Options);
        chart_2_2.series[0].setData(noGapsDataArray(data['dt_skipped'], 86400));
        chart_2_2.series[1].setData(noGapsDataArray(data['dt_level_1'], 86400));
        chart_2_2.series[2].setData(noGapsDataArray(data['dt_level_2'], 86400));
        chart_2_2.series[3].setData(noGapsDataArray(data['dt_level_3'], 86400));
        chart_2_2.series[4].setData(noGapsDataArray(data['dt_level_4'], 86400));
        chart_2_2.series[5].setData(noGapsDataArray(data['dt_level_5'], 86400));
        chart_2_2.series[6].setData(noGapsDataArray(data['dt_average'], 86400));
        chart_2_2.xAxis[0].update({
            plotBands: weekends
        });
    }

    /***************************************************************
     * end of chart 1.1
     ***************************************************************/

    /***************************************************************
     * start of top venues chart
     * container: chart_2_1
     ***************************************************************/
    var chart_2_1_Options = {
        chart: {
            renderTo: 'chart_2_1',
            backgroundColor: '#FFFFFF'
        },
        plotOptions: {
            column: {
                borderWidth: 0
            },
            series: {
                maxPointWidth: 40,
                stacking: 'normal'
            }
        },
        legend: {
            enabled: false
        },
        xAxis: {
            type: 'category'
        },
        tooltip: {
            shared: true,
            useHTML: true,
            formatter: function () {
                var mySum = 0;
                var tooltipcontent = '<b>' + this.points[0].key + '</b>';
                tooltipcontent += '<table style="width:100%">';

                $.each(this.points, function () {
                    var symbol = '■';
                    tooltipcontent += '<tr><td><span style="color:' + this.point.color + '">' + symbol + '</span> ' + this.series.name + ':</td><td style="text-align: right;">' + this.y.toLocaleString() + '</td></tr>';
                    mySum += this.y;
                });

                tooltipcontent += '<tr><td><b>Total:</b></td><td style="text-align: right;"><b>' + mySum.toLocaleString() + '</b><td></tr>';
                tooltipcontent += '</table>';
                return tooltipcontent;
            }
        }
    };

    /**
     * initialize the chart
     */
    var chart_2_1 = new Highcharts.Chart(chart_2_1_Options);
    chart_2_1.showLoading();

    /**
     * callback to be called from the bundled ajax calls
     */
    function chart_2_1_DataReceived(data) {
        /**
         * sort the zones array (zone with highest total visitor count first),
         * then only "take" top 10 from "data" to display in the chart,
         * all using lodash chaining
         */
        var top10 = _
            .chain(data)
            .orderBy(function(value, key) {
                return value[1] + value[2];
            }, 'desc')
            .take(10)
            .value();

        repeatVisitors = [],
        newVisitors = []

        for (var i = 0; i < top10.length; i++) {
            repeatVisitors.push([top10[i][0], top10[i][1]]);
            newVisitors.push([top10[i][0], top10[i][2]]);
        }

        /**
         * only show legend when we have a few zones to display
         */
        if (repeatVisitors.length < 6) {
            chart_2_1_Options.legend.enabled = true;
        }

        var seriesoptions = [
            {
                type: 'bar', // default chart type
                states: {
                    hover: {
                        enabled: true
                    }
                },
                color: '#e25826',
                name: 'new visitors',
                stack: 'visitors'
            },
            {
                type: 'bar', // default chart type
                states: {
                    hover: {
                        enabled: true
                    }
                },
                color: '#132149',
                name: 'repeat visitors',
                stack: 'visitors'
            }
        ];
        chart_2_1_Options.series = seriesoptions;
        var chart_2_1 = new Highcharts.Chart(chart_2_1_Options);
        chart_2_1.series[1].setData(repeatVisitors);
        chart_2_1.series[0].setData(newVisitors);
    }

    /**************************************************************
     * end of chart 2.1
     **************************************************************/

    /***************************************************************
     * start of timeOfDay average: chart 2.2
     * container: chart_3_2
     * url: {{site.uri.public}}/api/visitor_report/visitors_per_hourofday/
     ***************************************************************/
    var chart_3_2_Options = {
        chart: {
            renderTo: 'chart_3_2',
            backgroundColor: '#FFFFFF',
            type: 'area'
        },
        xAxis: {
            type: 'category'
        },
        tooltip: {
            shared: true,
            formatter: function () {
                var tooltipcontent = '<b>Between ' + this.x + ':00 and ' + (this.x+1) + ':00</b>';
                // we have to loop here as we don't yet know how many series we will have
                $.each(this.points, function () {
                    tooltipcontent += '<br/>' + this.series.name + ': ' + this.y.toLocaleString();
                });

                return tooltipcontent;
            }
        },
        legend: {
            enabled: true
        }
    };

    /**
     * initialize the chart
     */
    var chart_3_2 = new Highcharts.Chart(chart_3_2_Options);
    chart_3_2.showLoading();

    /**
     * callback to be called from the bundled ajax calls
     */
    function chart_3_2_DataReceived(data) {
        /**
         * do something with the data
         */
        var seriesoptions = [
            {
                type: 'area',
                color: '#e25826', // e25826
                name: 'average visitors'
            }
        ];

        chart_3_2_Options.series = seriesoptions;
        chart_3_2 = new Highcharts.Chart(chart_3_2_Options);
        chart_3_2.series[0].setData(data);

        /**
         * here we also get the busiest hour and send that to donut 4
         */
        var hours = _.sortBy(data, function(value, key) {
            return value[1];
        });

        if (hours.length > 0) {
            $('#donut_2').html((_.last(hours)[0]) + ':00 - ' + (_.last(hours)[0] + 1) + ':00');
        } else {
            $('#donut_2').html('<span style="font-size: 60%;">no data</span>');
        }
    }

    /***************************************************************
     * end of chart 2.2
     ***************************************************************/

    /***************************************************************
     * start of visitor stats chart
     * container: chart_3_1
     ***************************************************************/
    var chart_3_1_Options = {
        chart: {
            renderTo: 'chart_3_1',
            backgroundColor: '#FFFFFF',
            zoomType: 'x'
        },
        xAxis: {
            type: 'datetime',
            plotBands: weekends,
            events: {
                /**
                 * sync charts when zoom is triggered
                 */
                afterSetExtremes: function (event) {
                    var xMin = event.min;
                    var xMax = event.max;
                    var chart_2_2 = $('#chart_2_2').highcharts();
                    var ex = chart_2_2.xAxis[0].getExtremes();
                    if (ex.min != xMin || ex.max != xMax) chart_2_2.xAxis[0].setExtremes(xMin, xMax, true, false);
                }
            }
        },
        tooltip: {
            shared: true,
            useHTML: true,
            formatter: function () {
                var tooltipcontent = '<b>' + moment(this.x).format("dddd, D MMMM YYYY") + '</b>';
                var mySum = 0;
                tooltipcontent += '<table style="width:100%">';

                /**
                 * we have to loop here as we don't yet know how many series we will have
                 */
                $.each(this.points, function () {
                    var symbol = '■';
                    tooltipcontent += '<tr><td><span style="color:' + this.point.color + '">' + symbol + '</span> ' + this.series.name + ':</td><td style="text-align: right;">' + this.y.toLocaleString() + '</td></tr>';
                    mySum += this.y;
                });

                tooltipcontent += '<tr><td><b>Total:</b></td><td style="text-align: right;"><b>' + mySum.toLocaleString() + '</b><td></tr>';
                tooltipcontent += '</table>';
                return tooltipcontent;
            }
        },
        plotOptions: {
            column: {
                borderWidth: 0,
                stacking: 'normal'
            }
        },
        legend: {
            enabled: true
        }
    };

    /**
     * initialize the chart
     */
    var chart_3_1 = new Highcharts.Chart(chart_3_1_Options);
    chart_3_1.showLoading();

    /**
     * callback to be called from the bundled ajax calls
     */
    function onChart_3_1_DataReceived(data) {
        console.log(data);
        /**
         * do something with the data
         */
        var seriesoptions = [
            {
                type: 'column', // default chart type
                lineWidth: 2,
                states: {
                    hover: {
                        enabled: true,
                        lineWidth: 2
                    }
                },
                color: '#e25826',
                name: 'new visitors',
                stack: 'visitors'
            },
            {
                type: 'column', // default chart type
                lineWidth: 2,
                states: {
                    hover: {
                        enabled: true,
                        lineWidth: 2
                    }
                },
                color: '#132149',
                name: 'repeat visitors',
                stack: 'visitors'
            }
        ];

        /**
         * when date range is longer than 6 weeks we switch to area chart instead of column
         */
        if (data.new.length > 6*7) {
            seriesoptions[0].type = 'area';
            seriesoptions[1].type = 'area';
        }

        chart_3_1_Options.series = seriesoptions;
        var chart_3_1 = new Highcharts.Chart(chart_3_1_Options);
        chart_3_1.series[0].setData(noGapsDataArray(data.new, 86400));
        chart_3_1.series[1].setData(noGapsDataArray(data.repeat, 86400));
        chart_3_1.xAxis[0].update({
            plotBands: weekends
        });

        /**
         * NOTE: with this function we also feed the "total visitors" data to chart 1.2
         */
        var totalnew = 0;
        _.forEach(data.new, function(value) {
            totalnew += value[1];
        });

        var totalrepeat = 0;
        _.forEach(data.repeat, function(value) {
            totalrepeat += value[1];
        });

        /**
         * define font size percentage for the donut contents, reduce size if total is over 1M
         */
        var chart_1_2__font_size_perc = 150;
        if (totalnew + totalrepeat >= 1000000) {
            var chart_1_2__font_size_perc = 120;
        }

        if (totalnew + totalrepeat >= 10000000) {
            var chart_1_2__font_size_perc = 100;
        }

        chart_1_2_Options.title.text = '<b style="font-size: ' + chart_1_2__font_size_perc + '%; font-weight: bold;">' + (totalnew + totalrepeat).toLocaleString() + '</b><br><b>Total</b>';
        var chart_1_2 = new Highcharts.Chart(chart_1_2_Options);
        chart_1_2.series[0].setData([totalnew, totalrepeat]);

        /**
         * NOTE: with this function we also feed donut_1
         */
        $('#donut_1').html((totalnew + totalrepeat).toLocaleString());


        /**
         * NOTE: with this function we also feed the "average visitors" data to donut 4
         */
        var total_visitors = totalnew + totalrepeat;
        var counter = data.new.length;

        if (counter > 1) {
            var average = Math.floor(total_visitors/counter);
        } else {
            var average = total_visitors;
        }

        $('#donut_4').html(average.toLocaleString());
    }

    /***************************************************************
     * end of chart 3.2
     ***************************************************************/

    /***************************************************************
     * top row donut charts from here
     ***************************************************************/

    /**
     * here we get the metrics (average visitors for multiple time units) for the top row donuts with ajax
     * - start off with the ajax function to get average visitor metrics
     *
     * TODO:
     * update to cover ALL venues allowed
     */
    $.ajax({
        url:        '{{site.uri.public}}/geo-sense/api/venue_report/alltime_averages',
        type:       'GET',
        dataType:   'json',
        success:    onAvgVisitorMetricsReceived
    });

    /**
     * then push the received average visitor metrics to the top row donuts
     */
    function onAvgVisitorMetricsReceived(data) {
        $('#donut_5').html(data.average_yearly.toLocaleString());
        $('#donut_6').html(data.average_monthly.toLocaleString());
        $('#donut_7').html(data.average_weekly.toLocaleString());
        $('#donut_8').html(data.average_daily.toLocaleString());
        $("#chart_1_1_loading_spinner").hide();
        $('#chart_1_1').html(data.total.toLocaleString());

        /**
         * a version of the same <div> as above but for narrow containers
         */
        $('#chart_1_1_md').html(data.total.toLocaleString());
    }

    /**
     * push the received dwelltime data for a range not starting today to the page
     */
    function onDonut_3_DataReceived(data) {
        /**
         * Load all the data into the DOM
         */
        $('#donut_3').html(data + ' <span style="font-size: 60%;">minutes</span>');
    }

    /***************************************************************
     * end of top row donut charts
     ***************************************************************/

    /***************************************************************
     * start of new/repeat chart
     * container: chart_1_2
     ***************************************************************/

    /**
     * define specific options then draw "chart 1.2" to
     * container: chart_1_2
     */
    var chart_1_2_Options = {
        chart: {
            type: 'pie',
            renderTo: 'chart_1_2',
            backgroundColor: '#FFFFFF',
            plotBorderWidth: null,
            plotShadow: false,
            spacingTop: 0,
            spacingBottom: 0,
            spacingLeft: 0,
            spacingRight: 0
        },
        plotOptions: {
            pie: {
                innerSize: '65%',
                center: ['50%', '50%'],
                borderWidth: 0,
                allowPointSelect: false,
                cursor: false,
                showInLegend: true,
                point: {
                    events: {
                        legendItemClick: function () {
                            return false;
                        }
                    }
                }
            },
            series: {
                states: {
                    hover: {
                        enabled: false
                    }
                }
            }
        },
        legend: {
            align: 'right',
            verticalAlign: 'top',
            layout: 'vertical',
            floating: true
        },
        tooltip: {
            formatter: function () {
                var tooltipcontent = '<b>' + this.key + '</b><br>' + (Math.round(this.percentage*10))/10 + '% (' + this.y.toLocaleString() + ' of ' + this.total.toLocaleString() + ')';
                return tooltipcontent;
            }
        },
        title: {
            align: 'center',
            verticalAlign: 'middle',
            y: 10
        }
    };

    chart_1_2_Options.series = [{
        name: "visitors",
        data: [{
            name: "new visitors",
            y: 0,
            color: '#e25826'
        },
        {
            name: "repeat visitors",
            y: 0,
            color: '#132149'
        }]
    }];

    var chart_1_2 = new Highcharts.Chart(chart_1_2_Options);
    chart_1_2.showLoading();

    /***************************************************************
     * end of chart 1.2
     ***************************************************************/

    /***************************************************************
     * daterangepicker and ajax loading of all the data from here
     ***************************************************************/
    /**
     * define default start and end for the page
     */
    //var rangeStart = moment().startOf('week');
    //var rangeEnd   = moment();
    var rangeStart = moment().startOf('day').subtract(1, 'weeks');
    var rangeEnd   = moment().startOf('day');

    /**
     * initiate the daterangepicker with initial start/end and Label
     */
    page_daterange(rangeStart, rangeEnd);

    /**
     * functions to display the "active" custom date range and the picker for current page
     */
    $('#page_daterange').daterangepicker({
        timePicker:          true,
        timePicker24Hour:    true,
        timePickerIncrement: 15,
        showISOWeekNumbers:  true,
        locale:              {
            format: "DD/MM/YYYY",
            firstDay: 1
        },
        ranges:              {
           'Yesterday':          [moment().startOf('day').subtract(1, 'days'), moment().startOf('day').subtract(1, 'days').endOf('day')],
           'Past 7 days':        [rangeStart, rangeEnd], //default value for the page
           'Past Month':         [moment().startOf('day').subtract(1, 'months'), moment().startOf('day')],
           'This Month to-date': [moment().startOf('month'), moment().startOf('day')],
           'All Time':           ['01/06/2016', moment().startOf('day')]
        },
        startDate:           rangeStart,
        endDate:             rangeEnd,
        minDate:             '01/06/2016',
        maxDate:             moment().startOf('day'),
        opens:               'left'
    }, page_daterange);

    /**
     * callback function to execute upon selected date range
     */
    function page_daterange(start, end) {
        /**
         * place the selected range in the <span> at the top of the page
         */
        $('#page_daterange_selected').html('<b>' + start.format('H:mm dddd, D MMMM YYYY') + ' - ' + end.format('H:mm dddd, D MMMM YYYY') + '</b>');
        $('#page_daterange_selected_small').html('<b>' + start.format('ddd, D MMM YYYY') + ' - ' + end.format('ddd, D MMM YYYY') + '</b>');

        if (end.diff(start) === 0) {
            console.log('we have difference between start and end of zero: we will add 1 hour to end');
            end.add(1, 'hour');
        }

        console.log(start + ':' + end);

        /**
         * update the weekend plotbands
         */
        weekends = weekendAreasDaily(start, end);

        /**
         * then we need to set the charts, <div>s and <spans>s which will be refreshed, to their loading state
         */
        var chart_1_2 = $("#chart_1_2").highcharts();
        var chart_2_1 = $("#chart_2_1").highcharts();
        var chart_2_2 = $("#chart_2_2").highcharts();
        var chart_3_1 = $("#chart_3_1").highcharts();
        var chart_3_2 = $("#chart_3_2").highcharts();

        chart_1_2.showLoading();
        chart_2_1.showLoading();
        chart_2_2.showLoading();
        chart_3_1.showLoading();
        chart_3_2.showLoading();

        $('#donut_1').html('<i class="fa fa-spinner fa-spin"></i>');
        $('#donut_2').html('<i class="fa fa-spinner fa-spin"></i>');
        $('#donut_3').html('<i class="fa fa-spinner fa-spin"></i>');
        $('#donut_4').html('<i class="fa fa-spinner fa-spin"></i>');

        /**
         * from here we call all ajax sources with the newly selected start/end:
         */

        /**
         * get the average dwell time for donut_3 (updated)
         */
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/venue_report/average_dwelltime/' + start + "/" + end,
            type:     'GET',
            dataType: 'json',
            success:  onDonut_3_DataReceived
        });

        /**
         * get the data for chart 1.1, donut_4 (updated)
         */
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/venue_report/visitors_durations/' + start + '/' + end,
            type:     'GET',
            dataType: 'json',
            success:  onChart_2_2_DataReceived
        });

        /**
         * get the data for chart 3.2, chart 1.2, donut_1 (updated)
         */
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/venue_report/new_vs_repeat/' + start + '/' + end,
            type:     'GET',
            dataType: 'json',
            success:  onChart_3_1_DataReceived
        });

        /**
         * get the data for chart 2.2, donut_2 (updated)
         */
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/venue_report/visitors_per_hourofday/' + start + '/' + end,
            type:     'GET',
            dataType: 'json',
            success:  chart_3_2_DataReceived
        });

        /**
         * get the data for chart 2.1 (updated)
         */
        $.ajax({
            url:      '{{site.uri.public}}/geo-sense/api/venue_report/busiest_venues/' + start + '/' + end,
            type:     'GET',
            dataType: 'json',
            success:  chart_2_1_DataReceived
        });

    }

    /***************************************************************
     * end of daterangepicker and ajax data loading
     ***************************************************************/

    /***************************************************************
     * other shared functions from here
     ***************************************************************/

    /**
     * force a resize event after page load
     */
    window.dispatchEvent(new Event('resize'));
})
</script>
{% endblock %}